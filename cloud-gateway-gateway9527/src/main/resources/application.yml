server:
  port: 9527
spring:
  application:
    name: cloud-gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true #k开启从注册中心动态创建路由的功能，利用微服务名进行路由
      routes:
        - id: payment_routh  #路由的ID，没有固定规则但要求唯一，建议配合服务名

        #  uri: http://localhost:8001      #匹配后提供服务的路由地址(静态写死的)
          uri: lb://cloud-payment-service #匹配后提供服务的路由地址 (lb ==> loadblance 负载均衡)
          predicates:
            - Path=/payment/get/**   #断言，路径相匹配的进行路由

        - id: payment_routh2 #路由的ID，没有固定规则但要求唯一，建议配合服务名

       #   uri: http://localhots:8001   #匹配后提供服务的路由地址(静态写死的)
          uri: lb://cloud-payment-service #匹配后提供服务的路由地址 (lb ==> loadblance 负载均衡)
          predicates:
            - Path=/payment/lb/**  #断言，路径相匹配的进行路由
              #在测试类T2中获取的时间  除After之外 还有Before Between
            - After=2021-08-24T10:51:24.677+08:00[Asia/Shanghai]  #在这个时间之后lb访问才有效果


            #Cookie Route Predicate需要两个参数,一个是Cookie name,
            #一个是正则表达式,路由规则会通过获取对应的Cookie name值和正则表达式去匹配,
            #如果匹配上就会执行路由,如果没有匹配上则不执行
            - Cookie=username,Administrator


            #两个参数:一个是属性名称和一个正则表达式,这个属性值和正则表达式匹配则执行。
            - Header=X-Request-Id, \d+ #请求头要有X-Request-Id属性并且值为整数的正则表达

            # Host Method,Path,Query



eureka:
  instance:
    hostname: cloud-gateway-service
  client: #服务提供者provider注册进eureka服务列表内
    service-url:
      regjster-with-eureka: true
      fetch-registry: true
      defaultZone: http://eureka7001.com:7001/eureka
